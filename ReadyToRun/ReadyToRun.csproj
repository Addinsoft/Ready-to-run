<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;net5.0</TargetFrameworks>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>

    <IsPackable>true</IsPackable>

    <Authors>Addinsoft</Authors>

    <Version>1.0.6</Version>

    <PackageLicenseFile>LICENSE</PackageLicenseFile>

    <PackageProjectUrl></PackageProjectUrl>

    <RepositoryUrl></RepositoryUrl>

    <RepositoryType></RepositoryType>

    <Description>XLSTAT Ready to run library is a small .NET library written in C#, to create Microsoft Excel files in the XLSM format with a XLSTAT preconfigured analyse. The file generated with the library contains a Start sheet which has a button to launch the preconfigured XLSTAT analysis. It also has sheet for data.</Description>

    <Copyright>Addinsoft</Copyright>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Ressources\drawing1.xml" />
    <None Remove="Ressources\Template.xlsm" />
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Ressources\drawing1.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </EmbeddedResource>
    <EmbeddedResource Include="Ressources\Template.xlsm">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="ClosedXML" Version="0.95.4" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.7.1" />
    <PackageReference Include="coverlet.collector" Version="1.3.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Ressources\strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Ressources\strings.resx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
